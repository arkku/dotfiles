set -g mouse on
set -g history-limit 32767

set -s escape-time 0
set -s focus-events on

set -g renumber-windows on
setw -g automatic-rename on
setw -g aggressive-resize on

set -g monitor-activity on
set -g visual-activity off

set -g set-titles on
set -g set-titles-string "#T"
set -g status-interval 10
set -g status-style fg=white,bg=blue
set -g status-left-style fg=white
set -g status-left " %H:%M #[fg=cyan]|"
set -g status-right-style fg=cyan
set -g status-right-length 40
set -g status-right "| #[fg=white]#T #[fg=cyan]|"
setw -g window-status-format " #I:#W#F "
setw -g window-status-style fg=white
setw -g window-status-current-format " #I:#W#F "
setw -g window-status-current-style fg=yellow,bg=blue
setw -g window-status-activity-style fg=default,underscore
setw -g window-status-last-style fg=white
setw -g window-status-bell-style fg=brightwhite
setw -g window-status-separator "#[fg=cyan]|"
setw -g pane-border-format "#P #T"
setw -g pane-border-style fg=white
setw -g pane-active-border-style fg=yellow
set -g message-style fg=white,bg=black
setw -g clock-mode-style 24

set -g display-panes-time 1500
bind Q set display-panes-time 5000 \; display-panes \; set display-panes-time 1500

#set -ga update-environment TERM_PROGRAM

unbind t
unbind C-t
set -g prefix C-t
bind t send-prefix
bind C-t send-prefix
bind A command-prompt -I "#W" 'rename-window "%%"'
bind R refresh-client
bind x confirm-before kill-pane
bind X confirm-before kill-window
bind V choose-window 'join-pane -h -s "%%"'
bind S choose-window 'join-pane -h -s "%%"'
bind M choose-window 'swap-window -t "%%"'
bind ! break-pane

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clipcopy"
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T choice-mode-vi Escape send-keys -X cancel
bind -T edit-mode-vi Escape send-keys -X cancel
unbind-key -T copy-mode-vi Space; bind-key -T copy-mode-vi Space send-keys -X begin-selection
unbind-key -T copy-mode-vi C-v  ; bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [    ; bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]    ; bind-key -T copy-mode-vi ] send-keys -X copy-selection
setw -g mode-keys vi
set -g status-keys vi

bind '\' split-window -h -c "#{pane_current_path}"
bind '|' split-window -h -f
bind '_' split-window -v -f
bind '-' split-window -v -c "#{pane_current_path}"
bind 'v' split-window -h -f -c "#{pane_current_path}"
bind 'h' split-window -v -f -c "#{pane_current_path}"
bind '>' swap-pane -D
bind '<' swap-pane -U

bind r display-message "Reloading configuration..." \; source-file ~/.tmux.conf
bind PageUp copy-mode -u

# Don't exit selection mode on mouse release
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'

# Show pane borders only when there is more than one
set-hook -g 'after-new-window' 'run-shell -b "[ \#{window_panes} -le 1 ] && tmux set pane-border-status off || exit 0"'
set-hook -g 'after-kill-pane' 'run-shell -b "[ \#{window_panes} -le 1 ] && tmux set pane-border-status off || exit 0"'
set-hook -g 'pane-died' 'run-shell -b "[ \#{window_panes} -le 1 ] && tmux set pane-border-status off || exit 0"'
set-hook -g 'pane-exited' 'run-shell -b "[ \#{window_panes} -le 1 ] && tmux set pane-border-status off || exit 0"'
set-hook -g 'after-split-window' 'run-shell -b "[ \#{window_panes} -gt 1 ] && tmux set pane-border-status top || exit 0"'

# Try to determine if the terminal supports 256 colors
if-shell '[[ $(tput colors 2>/dev/null) -ge 256 ]]' 'set-option -g default-terminal screen-256color' 'set-option -g default-terminal screen'
